package com.npfk.tasks.strings.level.easy.chapter1;

/** 1.2 Bonjour. Різниця між println() та print()
 *
 * От що що, а різницю між цими двома методами досить варто знати. Така убивча парочка дуже часто використовується в алгоритмах,
 * і її незнання в майбутньому досить непогано так може зіпсувати тобі нерви;) Тому, краще інвестуємо у наше майбутнє.
 *
 * Думаю, в попередньому завданні ти помітив цікавий нюанс, що слово World відобразилось у новому рядку. Хоча... чому?
 * Насправді, метод println() у кінці твого рядку ставить спеціальний символ, який переносить курсор на новий рядок.
 * Тобто, якщо ми напишемо, наприклад, наступний код:
 * System.out.println("Я");
 * System.out.println("-");
 * System.out.println("Хороший");
 *
 * То на екран буде виведено наступна послідновність слів:
 * Я
 * -
 * Хороший
 *
 * Тому що ми 3 рази викликали цей метод println(), і він нам 3 рази підряд поставив у кінці спецсимвол.
 * Цікавий нюанс: Навіть після слова "Хороший" курсор перенісся на новий рядок;)
 *
 * Угу... Все так, як воно має бути. Але, що ж буде, якщо ми точно те ж саме надамо методу print()?
 *
 * System.out.print("Я");
 * System.out.print("-");
 * System.out.print("Хороший");
 *
 * На екран виведеться:
 * Я-Хороший
 *
 * Тобто, як ти сам бачиш, метод print() не додає в кінці твого рядку ніяких спецсимволів. Він продовжує читати твої слова
 * на тому ж рядку. Курсор не переноситься.
 *
 *
 * Добренько, ось твоя задачка. До десяти рахувати вмієш?;)
 *
 * Умова: Зроби так, щоб програма вивела наступну послідовність слів у заданому порядку.
 *
 * Програма виведе:
 * Один
 * Два
 * Три
 * ЧотириП'ятьШістьСім
 * ВісімДев'ять
 * Десять
 *
 *
 * АЛЕРТ!!! Будь дуже уважним;)))
 */



public class Lesson2
{

    public static void main(String[] args)
    {
        // Напиши код тут.
    }
}
