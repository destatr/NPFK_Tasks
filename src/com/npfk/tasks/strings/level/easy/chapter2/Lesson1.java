package com.npfk.tasks.strings.level.easy.chapter2;

/** Hallöchen. Ввід від користувача.
 *
 * Працювати з вже готовими зміннами, звісно, це все чудово. Але... Це трошки "скучно".
 *
 * Тому, в цій лекції ми навчимось надавати нашій програмі будь-які данні безпосередньо з консолі.
 * Коротче кажучи, вводити данні в нашу програму.
 *
 * Для цього, ми познайомимось з таким класом, як Scanner. Це вже третій клас, з яким ти познайомишся:)
 * І ні, я не просто покажу тобі, що він існує, і як його правильно викликати.
 * Я тобі розкажу, що тут взагалі відбувається.
 *
 * Отже, давай почнемо з чогось дуже-дуже банального.
 *
 * Просто викличемо цей клас у нашому коді.
 * Для цього ми створимо змінну типу Scanner.
 *
 * Scanner anyLine = new Scanner(System.in);
 *
 * Так от... Думаю, вже забагато "букаф"...
 * Але, поки що пропустимо цей момент і йдемо далі. Потім повернемось
 *
 * String line = anyLine.nextLine();
 * System.out.println("Ви ввели: " + line);
 * Щось зовсім незрозуміло...
 *
 * І того, у тебе повинен отриматсь наступний код:
 *
 *
 * !!!!!!!!Будь ласка, запусти цей код у методі main()!!!!!!!
 * Scanner anyLine = new Scanner(System.in);
 * String line = anyLine.nextLine();
 * System.out.println("Ви ввели" + line);
 * !!!!!!!!Будь ласка, запусти цей код у методі main()!!!!!!!
 *
 * Ти ж його запустив, чи не так? Чи не так?... Запусти цей код!!!
 *
 * =====================================================================================================================
 * ДИСКЛЕЙМЕР: Не треба намагатись зазубрити синтаксис змінної, яка під типом Scanner. Так, на перший погляд
 *             це досить важка частина коду. Але це так, тому що ти не розумієш, що тут відбувається. Після того,
 *             як я тобі поясню далі, тобі буде набагато легше дивитись на цей код.
 *             Не бійся! Пам'ятай, всі через це проходили. У разі чого, пошукай інформацію у Google.
 * =====================================================================================================================
 *
 * Ітак, почнемо зі змінної anyLine. Давай почнемо з того, що ця змінна має в собі всі методи класу Scanner.
 * Тобто, якщо ти напишеш...
 *  anyLine.
 * То у тебе вискочить менюшка зі всіма методами класу Scanner. Думаю, це поки що зрозуміло.
 * І так, в рамках цієї практики нам знадобиться лише один метод класу Scanner: nextLine()
 * Так, а тепер запитаннячко: Чому нам треба створювати змінну, щоб просто ввести текст з екрану?!?!?!
 *
 * Насправді, все дуже просто. Ми будемо використовувати методи класу Scanner саме через цю змінну. Тобто, вона є посередником
 * між нашим кодом, та класом Scanner.
 * І ще, введений текст треба десь зберігати, інакше він просто пропаде;)
 *
 * Добре, а що ж тоді значить оцей System.in?  Хм... А пам'ятаєш метод println()?:) Звідки він викликається?
 * Правильно, з System.out! І якщо System.out використовується для того, щоб виводи щось на екран,
 * то, скоріше за все, System.in використовується для того, щоб дозволити вводити з клавіатури
 *
 * Тобто, дивись
 * System.OUT.println() - Бачиш, OUT.
 * А окрім оцього OUT є ще IN.  System.in
 *
 * Давай поясню, що це таке.
 * out - це скорочено від англійського слова output - виводити.
 * in -  це скорочено від англійського слова input - вводити.
 *
 * І тим паче, якщо ти просто напишеш System.in. разом з крапкою, то також вискоче менюшка з методами, як це в System.out;)
 *
 * Тобто, по ідеї, оцей System.in має тримати в собі метод, який дозволяє читати з клавіатури. Навіщо ж тоді ми використовуємо клас Scanner?
 * Так, такий метод є. Але, проблема в тому... Що System.in читає лише по одному символу. По інакшому взагалі ніяк.
 *
 * А клас Scanner - це дуже розумний клас. І він буде робити різну магію, і в кінці-кінців нам поверне саме рядок, а не один символ.
 * Думаю, поки що це зрозуміло?
 * System.in  читає лише один символ, а якщо ми напишемо йому декілька символів, він поверне помилку, оскільки в char можна помістити лише один символ.
 * А клас Scanner бере оцей System.in, робить певну магію, і дає нам змогу отримати саме рядок. Тобто, читати декілька символів.
 *
 *
 * І ще досить цікавий момент. Scanner настільки розумний, що може читати не тільки з консолі, а й файлу, та навіть з Інтернету.
 *
 * Ну, добре. Думаю, з класом Scanner поки що ясно, а що тоді тут відбувається?
 * String line = anyLine.nextLine();
 * Ну... Значить так. Ми тут викликаємо змінну anyLine, яка має в собі всі методи класу Scanner, і через неї викликаємо метод nextLine()
 *
 * Метод nextLine() вже читає з клавіатури. Тобто, це така команда, знаєш "прочитати з клавіатури, і все, що введе користувач, занести у зміну line"
 * Як ти сам вже бачиш, змінна anyLine є всього лише посередником між методом nextLine(), який читає з клавіатури, і змінною line,
 * яка буде зберігати в собі це значення.
 *
 * Думаю, тобі варто попрактикуватись з цим класом. Витрать, будь ласка, якусь годинку свого часу на удосконалення роботи з класом Scanner.
 *
 * А поки що, ось тобі завдання:
 *
 * Ну, перше що ти маєш зробити, так це зробити так, щоб програма зчитувала данні з клавіатури за допомгою класу Scanner
 * Вона має зчитувати рядок та зберігати його в якійсь змінній, бо він нам ще знадобиться.
 *
 * Далі, у тебе є константа NUMBER_OF_CHARACTERS_ALLOWED, яка має в собі значення 100. Тобто, 100 символів користувач може ввести.
 * Твоєю задачею буде зробити перевірку, тобто використати if-else.
 *
 * Перевір, будь ласка, чи не перевищує кількість символів, яку ввів користувач за дозволену кількість символів, тобто 100?
 * Якщо, ех, все ж таки перевищує, то ти маєш вивести на екран: На жаль, ви ввели занадто багато символів.
 * Якщо не перевищує, виведи на екран: Все чудово!
 *
 *  !!!ДОДАТКОВЕ ЗАВДАННЯ!!!
 *
 * Зроби, будь ласка, наступне. Якщо користувач не перевищив ліміт символів, виведи, будь ласка, скільки символів залишились вільними.
 * Тобто, якщо користувач ввів 65 символів зі 100, програма має вивести:
 * Все чудово!
 * 35
 *
 *
 */


public class Lesson1
{
    // Перекладається як "Дозволена кількість символів
    private static final int NUMBER_OF_CHARACTERS_ALLOWED = 100;
    public static void main(String[] args)
    {
        // Напиши код тут.
    }

}
